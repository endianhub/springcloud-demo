server:
  port: 9000 # 配置服务端口
  tomcat:
    threads:
      max: 10 # 假设模拟最大线程数

spring:
  application:
    name: order-server # 服务名称(服务注册到eureka名称)

# 服务注册到eureka地址
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7000/eureka
    register-with-eureka: true # 是否需要将自己注册到注册中心(注册中心集群需要设置为true)，默认为true。因为自己是为注册中心，所以不需要自己注册自己
    fetch-registry: true # 是否需要搜索服务信息（是否启用注册服务信息），因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；因为自己是为注册中心，不需要检索服务
  # 心跳检测检测与续约时间
  # 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
  instance:
    ###Eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则）
    lease-renewal-interval-in-seconds: 1
    ####Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，超过则剔除（客户端告诉服务端按照此规则等待自己）
    lease-expiration-duration-in-seconds: 2


# 设置feign客户端超时时间
ribbon:
  # 指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间。
  ReadTimeout: 5000
  # 指的是建立连接后从服务器读取到可用资源所用的时间。
  ConnectTimeout: 5000
